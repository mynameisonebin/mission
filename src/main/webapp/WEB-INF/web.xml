<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	version="4.0">
	<!--프론트 컨트롤러 Spring -> DispatcherServlet 정의 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name><!--서블릿 이름 -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!--브라우저 들이 서버에 요청을 했을때 모든 요청을 dispatcher 이 받아서 별도에 컨트롤러 역할을 하는 곳에 자동으로 
			넘겨준다. 그래서 프로젝트로 실행을 해줘야 한다. 스프링 클래스 사용 -->

		<!--그리고 위에 dispatcher 이 동작할때 필요한 추가적인 설정값 들이 필요한데 그때 사용할 설정파일을 초기화 파라미터로 넘겨준다. -->
		<init-param><!--서블릿을 실행할때 맨처음 무조건 한번 실행되는 것 -->
			<param-name>contextConfigLocation</param-name><!--이름은 정해 져있다. 컨텍스트 관련 위치 -->
			
	<param-value><!--파일이 여러개가 있을수 있다 하나 일수 도 있고-->
  		classpath:spring-mvc.xml <!--이 경로에 있는 xml 파일을 참조(실행?)-->
  		classpath:spring-member.xml<!--이 경로에 있는 xml 파일을 참조(실행?)-->
  		classpath:spring-controller.xml<!--이 경로에 있는 xml 파일을 참조(실행?)-->
  		<!--이 셋중에서 하나만 설정파일이 있어도 실행한다.그냥 값만 들어가 있으면 된다.
  		즉 프레임 워크 리소스에 설정하는 값들을 여기서 참조하게 한다 라는 뜻이다.-->
  		<!--classpath:xml 파일 위치를 적으면 classpath: 에 해당하는 경로는 기본적으로 프로젝트에서 src.main.resources 안을 얘기한다.-->
  	</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup><!--서블릿 중에서 순위(젤 먼저 실행) -->
		<multipart-config>
			<!-- <location>/tmp</location> 업로드 파일 저장되는 기본 경로 상대경로가 아닌 절대 경로로 작성(디폴트값 으로 설정)-->
			<max-file-size>20971520</max-file-size><!-- 한파일: 1mb * 20 -->
			<max-request-size>41943040</max-request-size><!-- 한번에 여러개올리는데 전체가 40mb -->
			<file-size-threshold>20971520</file-size-threshold><!-- 넘으면 temp에 넣고 업로드에 들어가지 않는다 : 20mb -->
		</multipart-config>
	</servlet>
	<!--서블릿 매핑( / 매핑은 default servlet 동작) -->
	<servlet-mapping><!--서블릿 매핑 (서블릿 요청을 언제 동작시킬 건지 매핑한다.) -->
		<servlet-name>dispatcher</servlet-name><!--서블릿 이름중 dispatcher 을 매핑 -->
		<url-pattern>/</url-pattern><!--default servlet 동작 애플리케이션의 web.xml 에서 url 
			pattern을 / 로 설정하면 그때 디폴트서블릿으로가는게 아니고 애플리케이션의 web.xml에서 받아주지못한 모든 요청이 디폴트서블릿으로 
			전달되게됩니다. 즉 내가 이해한 내용은 web에서 처리 못한 하지못하는 것을 default servlet 으로 처리 한다는 거 같다. 
			즉 모든 거 이긴 하지만 /*은 진짜 모든것 이고(그래서 jsp 에서 처리해야 하는것 까지 다 할려고 하니깐 에러가 발생한다.) 
			/ 는 jsp 로 요청하는건 jsp로 처리하고 못한는것을 서블릿으로 처리 한다는 것 같다. -->
	</servlet-mapping>

	<!--스프링 인코딩 필터 정의 -->
	<filter>
		<filter-name>encodingFilter</filter-name><!--필터이름 설정-->
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<!--스프링을 이용한 인코딩 방식 클래스 -->
		<init-param>
			<param-name>encoding</param-name><!--filter-name 의 속성중에 encoding 으로 UTF-8 적용-->
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
			<!--forceEncoding의 값이 true 이면 encoding의 값을 HttpServletRequest, HttpServletResponse 
				객체에 강제로 세팅해 준다. forceEncoding의 값이 false 이면 HttpServletRequest, HttpServletResponse 
				객체의 값이 null 인 경우에만 encoding의 값으로 세팅해 준다. -->
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name><!--위에 filter-name 을 가지고 매핑 -->
		<url-pattern>/*</url-pattern><!--모든 요청에 의미리 가지고 있다. 모든 요청에 인코등 적용 -->
	</filter-mapping>

</web-app>